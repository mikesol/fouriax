[tool.poetry]
name = "fouriax"
version = "0.1.2"
description = "A jax port of auraloss"
authors = [
    "Mike Solomon <mike120982@gmail.com>",
]
license = "MIT"
readme = "README.md"

documentation = "https://mikesol.github.io/fouriax"
homepage = "https://mikesol.github.io/fouriax"
repository = "https://github.com/mikesol/fouriax"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "fouriax", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.8, <4.0"
jax = "*"
jaxlib = "*"
numpy = "*"
scipy = "*"
optax = "<0.1.8" # optax has typing issues in 0.1.8 that prevent python 3.8 from being used
librosa = "*"

[tool.poetry.dev-dependencies]
auraloss = "*"
torch = "*"
hypothesis = "*"
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = {version = ">=0.18", extras = ["python"]}
mkdocs-material = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov fouriax \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 85
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
# This is the global mypy configuration.
# Avoid changing this!
strict = true  # See all the enabled flags `mypy --help | grep -A 10 'Strict mode'`
disallow_any_unimported = true

# If you need to ignore something for some specific module,
# add overrides for them. Avoid changing the global config!
# For example:
# [[tool.mypy.overrides]]
# module = [
#  "my_unpyted_dependency1.*",
#  "my_unpyted_dependency2.*"
# ]
# ignore_missing_imports = true

# [[tool.mypy.overrides]]
# module = [
#   "tests/my_thing/test_my_thing",
# ]
# disallow_untyped_defs = false
